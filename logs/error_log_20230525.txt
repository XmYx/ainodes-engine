BEGINNING
Machine Information:
Operating System: Windows 10
PIP List:
Package                      Version
---------------------------- ------------------------
absl-py                      1.4.0
accelerate                   0.17.1
addict                       2.4.0
aiohttp                      3.8.4
aiosignal                    1.3.1
antlr4-python3-runtime       4.9.3
appdirs                      1.4.4
asttokens                    2.2.1
astunparse                   1.6.3
async-timeout                4.0.2
attrs                        23.1.0
audioread                    3.0.0
av                           10.0.0
backcall                     0.2.0
basicsr                      1.4.2
beautifulsoup4               4.12.2
blobfile                     2.0.2
boltons                      23.0.0
cachetools                   5.3.0
certifi                      2022.12.7
cffi                         1.15.1
charset-normalizer           3.1.0
clip                         1.0
colorama                     0.4.6
contourpy                    1.0.7
cycler                       0.11.0
decorator                    5.1.1
deforum                      0.7a0
diffusers                    0.16.1
einops                       0.6.0
executing                    1.2.0
facexlib                     0.3.0
ffmpeg                       1.4
ffmpeg-python                0.1.7
filelock                     3.12.0
filterpy                     1.4.5
fire                         0.5.0
flatbuffers                  23.3.3
font-roboto                  0.0.1
fonts                        0.0.3
fonttools                    4.39.3
frozenlist                   1.3.3
fsspec                       2023.4.0
ftfy                         6.1.1
future                       0.18.3
fvcore                       0.1.5.post20221221
gast                         0.5.4
gdown                        4.7.1
gfpgan                       1.3.8
gitdb                        4.0.10
GitPython                    3.1.31
google-auth                  2.17.3
google-auth-oauthlib         0.4.6
google-pasta                 0.2.0
grpcio                       1.54.0
h5py                         3.8.0
huggingface-hub              0.14.1
idna                         3.4
imageio                      2.28.1
imageio-ffmpeg               0.4.8
importlib-metadata           6.6.0
iopath                       0.1.10
ipython                      8.12.0
jedi                         0.18.2
Jinja2                       3.1.2
joblib                       1.2.0
kandinsky2                   0.0.0
keras                        2.8.0
Keras-Preprocessing          1.1.2
kiwisolver                   1.4.4
lark                         1.1.5
lazy_loader                  0.2
libclang                     16.0.0
librosa                      0.10.0.post2
lightning-utilities          0.8.0
llama-cpp-python             0.1.50
llvmlite                     0.40.0
lmdb                         1.4.1
lxml                         4.9.2
Markdown                     3.4.3
markdown-it-py               2.2.0
MarkupSafe                   2.1.2
matplotlib                   3.7.1
matplotlib-inline            0.1.6
mdurl                        0.1.2
mpmath                       1.3.0
msgpack                      1.0.5
multidict                    6.0.4
networkx                     3.1
numba                        0.57.0
numexpr                      2.8.4
numpy                        1.24.2
oauthlib                     3.2.2
omegaconf                    2.3.0
open-clip-torch              2.16.0
openai                       0.27.6
opencv-contrib-python        4.7.0.72
opencv-python                4.7.0.72
opt-einsum                   3.3.0
packaging                    23.1
pandas                       1.5.3
parso                        0.8.3
pathlib                      1.0.1
pickleshare                  0.7.5
Pillow                       9.5.0
PIMS                         0.6.1
pip                          23.0.1
pooch                        1.6.0
portalocker                  2.7.0
prompt-toolkit               3.0.38
protobuf                     3.19.6
psutil                       5.9.5
pure-eval                    0.2.2
py3d                         0.0.87
pyasn1                       0.5.0
pyasn1-modules               0.3.0
pycparser                    2.21
pycryptodomex                3.17
pydispatch                   1.1.0
PyDispatcher                 2.0.7
pyexiv2                      2.8.1
Pygments                     2.15.1
pyparsing                    3.0.9
pypng                        0.20220715.0
pyqtgraph                    0.12.1
PySide6                      6.2.4
PySide6-Addons               6.4.2
PySide6-Essentials           6.4.2
PySocks                      1.7.1
python-dateutil              2.8.2
pytorch-lightning            2.0.0
pytz                         2023.3
PyWavelets                   1.4.1
pywin32                      306
PyYAML                       6.0
QtPy                         2.3.0
realesrgan                   0.3.0
regex                        2023.5.4
requests                     2.28.2
requests-oauthlib            1.3.1
rich                         13.3.2
rsa                          4.9
safetensors                  0.3.0
scikit-image                 0.20.0
scikit-learn                 1.2.2
scipy                        1.9.1
sentencepiece                0.1.99
setuptools                   67.6.1
shiboken6                    6.2.4
six                          1.16.0
slicerator                   1.1.0
smmap                        5.0.0
soundfile                    0.12.1
soupsieve                    2.4.1
soxr                         0.3.5
stack-data                   0.6.2
sympy                        1.11.1
tabulate                     0.9.0
tb-nightly                   2.12.0a20230126
tensorboard                  2.8.0
tensorboard-data-server      0.6.1
tensorboard-plugin-wit       1.8.1
tensorflow                   2.8.4
tensorflow-estimator         2.8.0
tensorflow-io-gcs-filesystem 0.31.0
termcolor                    2.3.0
threadpoolctl                3.1.0
tifffile                     2023.4.12
timm                         0.6.13
tokenizers                   0.13.3
tomli                        2.0.1
torch                        2.1.0.dev20230524+cu121
torchaudio                   2.1.0.dev20230524+cu121
torchdiffeq                  0.2.3
torchmetrics                 0.11.4
torchsde                     0.2.5
torchvision                  0.16.0.dev20230524+cu121
tqdm                         4.65.0
traitlets                    5.9.0
trampoline                   0.1.2
transformers                 4.23.1
typing_extensions            4.5.0
urllib3                      1.26.15
wcwidth                      0.2.6
Werkzeug                     2.3.3
wheel                        0.40.0
wrapt                        1.15.0
yacs                         0.1.8
yapf                         0.33.0
yarl                         1.9.2
zipp                         3.15.0
Failed to retrieve envinfo: [WinError 2] The system cannot find the file specified


Timestamp: 2023-05-25 07:50:58
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 158, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 473, in sample
    samples = uni_pc.sample_unipc(self.model_wrap, noise, latent_image, sigmas, sampling_function=sampling_function, max_denoise=max_denoise, extra_args=extra_args, noise_mask=denoise_mask)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\extra_samplers\uni_pc.py", line 880, in sample_unipc
    x = uni_pc.sample(img, timesteps=timesteps, skip_type="time_uniform", method="multistep", order=order, lower_order_final=True)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\extra_samplers\uni_pc.py", line 759, in sample
    x, model_x =  self.multistep_uni_pc_update(x, model_prev_list, t_prev_list, vec_t, step_order, use_corrector=use_corrector)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\extra_samplers\uni_pc.py", line 484, in multistep_uni_pc_update
    return self.multistep_uni_pc_bh_update(x, model_prev_list, t_prev_list, t, order, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\extra_samplers\uni_pc.py", line 683, in multistep_uni_pc_bh_update
    model_t = self.model_fn(x_t, t)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\extra_samplers\uni_pc.py", line 422, in model_fn
    return self.data_prediction_fn(x, t)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\extra_samplers\uni_pc.py", line 404, in data_prediction_fn
    noise = self.noise_prediction_fn(x, t)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\extra_samplers\uni_pc.py", line 398, in noise_prediction_fn
    return self.model(x, t)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\extra_samplers\uni_pc.py", line 330, in model_fn
    return noise_pred_fn(x, t_continuous)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\extra_samplers\uni_pc.py", line 298, in noise_pred_fn
    output = sampling_function(model, x, t_input, **model_kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 523, in _forward
    x = self.ff(self.norm3(x)) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 85, in forward
    return self.net(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 65, in forward
    return x * F.gelu(gate)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 10.00 MiB. GPU 0 has a total capacty of 23.99 GiB of which 0 bytes is free. Of the allocated memory 22.86 GiB is allocated by PyTorch, and 89.30 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF

---End of Error---
Timestamp: 2023-05-25 09:06:42
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 160, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 131, in sample_euler
    callback({'x': x, 'i': i, 'sigma': sigmas[i], 'sigma_hat': sigma_hat, 'denoised': denoised})
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 220, in callback
    latent = torch.einsum('...lhw,lr -> ...rhw', tensors["denoised"], self.latent_rgb_factors)
AttributeError: 'KSamplerNode' object has no attribute 'latent_rgb_factors'

---End of Error---
Timestamp: 2023-05-25 09:06:49
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 160, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 131, in sample_euler
    callback({'x': x, 'i': i, 'sigma': sigmas[i], 'sigma_hat': sigma_hat, 'denoised': denoised})
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 220, in callback
    latent = torch.einsum('...lhw,lr -> ...rhw', tensors["denoised"], self.latent_rgb_factors)
AttributeError: 'KSamplerNode' object has no attribute 'latent_rgb_factors'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 412, in reduce
    return _apply_recipe(recipe, tensor, reduction_type=reduction)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 235, in _apply_recipe
    _reconstruct_from_shape(recipe, backend.shape(tensor))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 165, in _reconstruct_from_shape_uncached
    raise EinopsError('Expected {} dimensions, got {}'.format(len(self.input_composite_axes), len(shape)))
einops.EinopsError: Expected 3 dimensions, got 4

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 160, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 131, in sample_euler
    callback({'x': x, 'i': i, 'sigma': sigmas[i], 'sigma_hat': sigma_hat, 'denoised': denoised})
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 226, in callback
    latent = rearrange(latent, 'c h w -> h w c').detach().cpu().numpy()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 483, in rearrange
    return reduce(cast(Tensor, tensor), pattern, reduction='rearrange', **axes_lengths)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 420, in reduce
    raise EinopsError(message + '\n {}'.format(e))
einops.EinopsError:  Error while processing rearrange-reduction pattern "c h w -> h w c".
 Input tensor shape: torch.Size([1, 3, 64, 64]). Additional info: {}.
 Expected 3 dimensions, got 4

---End of Error---
Timestamp: 2023-05-25 09:07:07
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 160, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 131, in sample_euler
    callback({'x': x, 'i': i, 'sigma': sigmas[i], 'sigma_hat': sigma_hat, 'denoised': denoised})
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 220, in callback
    latent = torch.einsum('...lhw,lr -> ...rhw', tensors["denoised"], self.latent_rgb_factors)
AttributeError: 'KSamplerNode' object has no attribute 'latent_rgb_factors'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 412, in reduce
    return _apply_recipe(recipe, tensor, reduction_type=reduction)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 235, in _apply_recipe
    _reconstruct_from_shape(recipe, backend.shape(tensor))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 165, in _reconstruct_from_shape_uncached
    raise EinopsError('Expected {} dimensions, got {}'.format(len(self.input_composite_axes), len(shape)))
einops.EinopsError: Expected 3 dimensions, got 4

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 160, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 131, in sample_euler
    callback({'x': x, 'i': i, 'sigma': sigmas[i], 'sigma_hat': sigma_hat, 'denoised': denoised})
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 226, in callback
    latent = rearrange(latent, 'c h w -> h w c').detach().cpu().numpy()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 483, in rearrange
    return reduce(cast(Tensor, tensor), pattern, reduction='rearrange', **axes_lengths)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 420, in reduce
    raise EinopsError(message + '\n {}'.format(e))
einops.EinopsError:  Error while processing rearrange-reduction pattern "c h w -> h w c".
 Input tensor shape: torch.Size([1, 3, 64, 64]). Additional info: {}.
 Expected 3 dimensions, got 4

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 160, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 131, in sample_euler
    callback({'x': x, 'i': i, 'sigma': sigmas[i], 'sigma_hat': sigma_hat, 'denoised': denoised})
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 228, in callback
    pixmap = pil_image_to_pixmap(img)
NameError: name 'pil_image_to_pixmap' is not defined

---End of Error---
Timestamp: 2023-05-25 09:07:19
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 160, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 131, in sample_euler
    callback({'x': x, 'i': i, 'sigma': sigmas[i], 'sigma_hat': sigma_hat, 'denoised': denoised})
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 220, in callback
    latent = torch.einsum('...lhw,lr -> ...rhw', tensors["denoised"], self.latent_rgb_factors)
AttributeError: 'KSamplerNode' object has no attribute 'latent_rgb_factors'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 412, in reduce
    return _apply_recipe(recipe, tensor, reduction_type=reduction)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 235, in _apply_recipe
    _reconstruct_from_shape(recipe, backend.shape(tensor))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 165, in _reconstruct_from_shape_uncached
    raise EinopsError('Expected {} dimensions, got {}'.format(len(self.input_composite_axes), len(shape)))
einops.EinopsError: Expected 3 dimensions, got 4

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 160, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 131, in sample_euler
    callback({'x': x, 'i': i, 'sigma': sigmas[i], 'sigma_hat': sigma_hat, 'denoised': denoised})
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 226, in callback
    latent = rearrange(latent, 'c h w -> h w c').detach().cpu().numpy()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 483, in rearrange
    return reduce(cast(Tensor, tensor), pattern, reduction='rearrange', **axes_lengths)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\einops\einops.py", line 420, in reduce
    raise EinopsError(message + '\n {}'.format(e))
einops.EinopsError:  Error while processing rearrange-reduction pattern "c h w -> h w c".
 Input tensor shape: torch.Size([1, 3, 64, 64]). Additional info: {}.
 Expected 3 dimensions, got 4

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 160, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 131, in sample_euler
    callback({'x': x, 'i': i, 'sigma': sigmas[i], 'sigma_hat': sigma_hat, 'denoised': denoised})
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 228, in callback
    pixmap = pil_image_to_pixmap(img)
NameError: name 'pil_image_to_pixmap' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 160, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 131, in sample_euler
    callback({'x': x, 'i': i, 'sigma': sigmas[i], 'sigma_hat': sigma_hat, 'denoised': denoised})
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 228, in callback
    pixmap = pil_image_to_pixmap(img)
NameError: name 'pil_image_to_pixmap' is not defined

---End of Error---
Timestamp: 2023-05-25 09:07:59
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 160, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 131, in sample_euler
    callback({'x': x, 'i': i, 'sigma': sigmas[i], 'sigma_hat': sigma_hat, 'denoised': denoised})
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 230, in callback
    if self.getOutputs(0) > 0:
TypeError: '>' not supported between instances of 'list' and 'int'

---End of Error---
Timestamp: 2023-05-25 13:47:38
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Timestamp: 2023-05-25 13:47:40
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 161, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 553, in sample_dpmpp_sde
    denoised = model(x, sigmas[i] * s_in, **extra_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 255, in forward
    out = self.inner_model(x, sigma, cond=cond, uncond=uncond, cond_scale=cond_scale, cond_concat=cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 114, in forward
    eps = self.get_eps(input * c_in, self.sigma_to_t(sigma), **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 140, in get_eps
    return self.inner_model.apply_model(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 243, in apply_model
    out = sampling_function(self.inner_model.apply_model, x, timestep, uncond, cond, cond_scale, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 522, in _forward
    x = self.attn2(self.norm2(x), context=context) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_optimizations.py", line 338, in scaled_dot_product_attention_forward
    k_in = self.to_k(context_k)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (154x1024 and 768x320)

---End of Error---
Timestamp: 2023-05-25 13:47:41
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 161, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 553, in sample_dpmpp_sde
    denoised = model(x, sigmas[i] * s_in, **extra_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 255, in forward
    out = self.inner_model(x, sigma, cond=cond, uncond=uncond, cond_scale=cond_scale, cond_concat=cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 114, in forward
    eps = self.get_eps(input * c_in, self.sigma_to_t(sigma), **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 140, in get_eps
    return self.inner_model.apply_model(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 243, in apply_model
    out = sampling_function(self.inner_model.apply_model, x, timestep, uncond, cond, cond_scale, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 522, in _forward
    x = self.attn2(self.norm2(x), context=context) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_optimizations.py", line 338, in scaled_dot_product_attention_forward
    k_in = self.to_k(context_k)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (154x1024 and 768x320)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\video_nodes\video_save_node.py", line 107, in evalImplementation_thread
    for val in pixmap_list:
TypeError: 'NoneType' object is not iterable

---End of Error---
Timestamp: 2023-05-25 13:47:46
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 161, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 553, in sample_dpmpp_sde
    denoised = model(x, sigmas[i] * s_in, **extra_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 255, in forward
    out = self.inner_model(x, sigma, cond=cond, uncond=uncond, cond_scale=cond_scale, cond_concat=cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 114, in forward
    eps = self.get_eps(input * c_in, self.sigma_to_t(sigma), **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 140, in get_eps
    return self.inner_model.apply_model(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 243, in apply_model
    out = sampling_function(self.inner_model.apply_model, x, timestep, uncond, cond, cond_scale, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 522, in _forward
    x = self.attn2(self.norm2(x), context=context) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_optimizations.py", line 338, in scaled_dot_product_attention_forward
    k_in = self.to_k(context_k)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (154x1024 and 768x320)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\video_nodes\video_save_node.py", line 107, in evalImplementation_thread
    for val in pixmap_list:
TypeError: 'NoneType' object is not iterable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Timestamp: 2023-05-25 13:47:47
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 161, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 553, in sample_dpmpp_sde
    denoised = model(x, sigmas[i] * s_in, **extra_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 255, in forward
    out = self.inner_model(x, sigma, cond=cond, uncond=uncond, cond_scale=cond_scale, cond_concat=cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 114, in forward
    eps = self.get_eps(input * c_in, self.sigma_to_t(sigma), **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 140, in get_eps
    return self.inner_model.apply_model(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 243, in apply_model
    out = sampling_function(self.inner_model.apply_model, x, timestep, uncond, cond, cond_scale, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 522, in _forward
    x = self.attn2(self.norm2(x), context=context) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_optimizations.py", line 338, in scaled_dot_product_attention_forward
    k_in = self.to_k(context_k)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (154x1024 and 768x320)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\video_nodes\video_save_node.py", line 107, in evalImplementation_thread
    for val in pixmap_list:
TypeError: 'NoneType' object is not iterable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 161, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 553, in sample_dpmpp_sde
    denoised = model(x, sigmas[i] * s_in, **extra_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 255, in forward
    out = self.inner_model(x, sigma, cond=cond, uncond=uncond, cond_scale=cond_scale, cond_concat=cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 114, in forward
    eps = self.get_eps(input * c_in, self.sigma_to_t(sigma), **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 140, in get_eps
    return self.inner_model.apply_model(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 243, in apply_model
    out = sampling_function(self.inner_model.apply_model, x, timestep, uncond, cond, cond_scale, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 522, in _forward
    x = self.attn2(self.norm2(x), context=context) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_optimizations.py", line 338, in scaled_dot_product_attention_forward
    k_in = self.to_k(context_k)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (154x1024 and 768x320)

---End of Error---
Timestamp: 2023-05-25 13:47:48
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 161, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 553, in sample_dpmpp_sde
    denoised = model(x, sigmas[i] * s_in, **extra_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 255, in forward
    out = self.inner_model(x, sigma, cond=cond, uncond=uncond, cond_scale=cond_scale, cond_concat=cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 114, in forward
    eps = self.get_eps(input * c_in, self.sigma_to_t(sigma), **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 140, in get_eps
    return self.inner_model.apply_model(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 243, in apply_model
    out = sampling_function(self.inner_model.apply_model, x, timestep, uncond, cond, cond_scale, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 522, in _forward
    x = self.attn2(self.norm2(x), context=context) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_optimizations.py", line 338, in scaled_dot_product_attention_forward
    k_in = self.to_k(context_k)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (154x1024 and 768x320)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\video_nodes\video_save_node.py", line 107, in evalImplementation_thread
    for val in pixmap_list:
TypeError: 'NoneType' object is not iterable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 161, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 553, in sample_dpmpp_sde
    denoised = model(x, sigmas[i] * s_in, **extra_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 255, in forward
    out = self.inner_model(x, sigma, cond=cond, uncond=uncond, cond_scale=cond_scale, cond_concat=cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 114, in forward
    eps = self.get_eps(input * c_in, self.sigma_to_t(sigma), **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 140, in get_eps
    return self.inner_model.apply_model(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 243, in apply_model
    out = sampling_function(self.inner_model.apply_model, x, timestep, uncond, cond, cond_scale, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 522, in _forward
    x = self.attn2(self.norm2(x), context=context) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_optimizations.py", line 338, in scaled_dot_product_attention_forward
    k_in = self.to_k(context_k)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (154x1024 and 768x320)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\video_nodes\video_save_node.py", line 107, in evalImplementation_thread
    for val in pixmap_list:
TypeError: 'NoneType' object is not iterable

---End of Error---
Timestamp: 2023-05-25 13:47:53
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 161, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 553, in sample_dpmpp_sde
    denoised = model(x, sigmas[i] * s_in, **extra_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 255, in forward
    out = self.inner_model(x, sigma, cond=cond, uncond=uncond, cond_scale=cond_scale, cond_concat=cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 114, in forward
    eps = self.get_eps(input * c_in, self.sigma_to_t(sigma), **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 140, in get_eps
    return self.inner_model.apply_model(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 243, in apply_model
    out = sampling_function(self.inner_model.apply_model, x, timestep, uncond, cond, cond_scale, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 522, in _forward
    x = self.attn2(self.norm2(x), context=context) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_optimizations.py", line 338, in scaled_dot_product_attention_forward
    k_in = self.to_k(context_k)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (154x1024 and 768x320)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\video_nodes\video_save_node.py", line 107, in evalImplementation_thread
    for val in pixmap_list:
TypeError: 'NoneType' object is not iterable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 161, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 553, in sample_dpmpp_sde
    denoised = model(x, sigmas[i] * s_in, **extra_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 255, in forward
    out = self.inner_model(x, sigma, cond=cond, uncond=uncond, cond_scale=cond_scale, cond_concat=cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 114, in forward
    eps = self.get_eps(input * c_in, self.sigma_to_t(sigma), **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 140, in get_eps
    return self.inner_model.apply_model(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 243, in apply_model
    out = sampling_function(self.inner_model.apply_model, x, timestep, uncond, cond, cond_scale, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 522, in _forward
    x = self.attn2(self.norm2(x), context=context) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_optimizations.py", line 338, in scaled_dot_product_attention_forward
    k_in = self.to_k(context_k)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (154x1024 and 768x320)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\video_nodes\video_save_node.py", line 107, in evalImplementation_thread
    for val in pixmap_list:
TypeError: 'NoneType' object is not iterable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Timestamp: 2023-05-25 13:47:54
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 161, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 553, in sample_dpmpp_sde
    denoised = model(x, sigmas[i] * s_in, **extra_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 255, in forward
    out = self.inner_model(x, sigma, cond=cond, uncond=uncond, cond_scale=cond_scale, cond_concat=cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 114, in forward
    eps = self.get_eps(input * c_in, self.sigma_to_t(sigma), **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 140, in get_eps
    return self.inner_model.apply_model(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 243, in apply_model
    out = sampling_function(self.inner_model.apply_model, x, timestep, uncond, cond, cond_scale, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 522, in _forward
    x = self.attn2(self.norm2(x), context=context) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_optimizations.py", line 338, in scaled_dot_product_attention_forward
    k_in = self.to_k(context_k)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (154x1024 and 768x320)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\video_nodes\video_save_node.py", line 107, in evalImplementation_thread
    for val in pixmap_list:
TypeError: 'NoneType' object is not iterable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 161, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 553, in sample_dpmpp_sde
    denoised = model(x, sigmas[i] * s_in, **extra_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 255, in forward
    out = self.inner_model(x, sigma, cond=cond, uncond=uncond, cond_scale=cond_scale, cond_concat=cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 114, in forward
    eps = self.get_eps(input * c_in, self.sigma_to_t(sigma), **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 140, in get_eps
    return self.inner_model.apply_model(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 243, in apply_model
    out = sampling_function(self.inner_model.apply_model, x, timestep, uncond, cond, cond_scale, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 522, in _forward
    x = self.attn2(self.norm2(x), context=context) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_optimizations.py", line 338, in scaled_dot_product_attention_forward
    k_in = self.to_k(context_k)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (154x1024 and 768x320)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\video_nodes\video_save_node.py", line 107, in evalImplementation_thread
    for val in pixmap_list:
TypeError: 'NoneType' object is not iterable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\ksampler_node.py", line 161, in evalImplementation_thread
    sample = common_ksampler(device="cuda",
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_sampler.py", line 60, in common_ksampler
    samples = sampler.sample(noise, positive_copy, negative_copy, cfg=cfg, latent_image=latent_image, start_step=start_step, last_step=last_step, force_full_denoise=force_full_denoise, denoise_mask=noise_mask, callback=callback, model_key=model_key)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 516, in sample
    samples = getattr(k_diffusion_sampling, "sample_{}".format(self.sampler))(self.model_k, noise, sigmas, extra_args=extra_args, callback=callback)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\sampling.py", line 553, in sample_dpmpp_sde
    denoised = model(x, sigmas[i] * s_in, **extra_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 255, in forward
    out = self.inner_model(x, sigma, cond=cond, uncond=uncond, cond_scale=cond_scale, cond_concat=cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 114, in forward
    eps = self.get_eps(input * c_in, self.sigma_to_t(sigma), **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\k_diffusion\external.py", line 140, in get_eps
    return self.inner_model.apply_model(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 243, in apply_model
    out = sampling_function(self.inner_model.apply_model, x, timestep, uncond, cond, cond_scale, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 225, in sampling_function
    cond, uncond = calc_cond_uncond_batch(model_function, cond, uncond, x, timestep, max_total_area, cond_concat)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\samplers.py", line 202, in calc_cond_uncond_batch
    output = model_function(input_x, timestep_, cond=c).chunk(batch_chunks)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 778, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 84, in forward
    x = layer(x, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 583, in forward
    x = block(x, context=context[i])
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 518, in forward
    return checkpoint(self._forward, (x, context), self.parameters(), self.checkpoint)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\attention.py", line 522, in _forward
    x = self.attn2(self.norm2(x), context=context) + x
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_optimizations.py", line 338, in scaled_dot_product_attention_forward
    k_in = self.to_k(context_k)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (154x1024 and 768x320)

---End of Error---
Timestamp: 2023-05-25 13:50:08
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Timestamp: 2023-05-25 13:52:11
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"], dummy_input, "resnet50_pytorch.onnx", verbose=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1544, in _export
    with exporter_context(model, training, verbose):
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 179, in exporter_context
    with select_model_mode_for_export(
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 140, in disable_apex_o2_state_dict_hook
    for module in model.modules():
AttributeError: 'ModelPatcher' object has no attribute 'modules'

---End of Error---
Timestamp: 2023-05-25 13:56:18
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Timestamp: 2023-05-25 13:58:45
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Timestamp: 2023-05-25 14:00:50
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Timestamp: 2023-05-25 14:01:47
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Timestamp: 2023-05-25 14:02:25
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Timestamp: 2023-05-25 14:03:02
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Timestamp: 2023-05-25 14:04:31
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Timestamp: 2023-05-25 14:05:18
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Timestamp: 2023-05-25 14:07:32
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Timestamp: 2023-05-25 14:08:23
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Timestamp: 2023-05-25 14:08:59
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Timestamp: 2023-05-25 14:10:48
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Timestamp: 2023-05-25 14:11:24
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Timestamp: 2023-05-25 14:12:24
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Timestamp: 2023-05-25 14:12:42
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Timestamp: 2023-05-25 14:13:23
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Timestamp: 2023-05-25 14:14:07
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Timestamp: 2023-05-25 14:14:23
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Timestamp: 2023-05-25 14:15:09
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Timestamp: 2023-05-25 14:16:36
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Given groups=1, weight of size [320, 4, 3, 3], expected input[1, 1, 77, 320] to have 4 channels, but got 1 channels instead

---End of Error---
Timestamp: 2023-05-25 14:17:20
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Given groups=1, weight of size [320, 4, 3, 3], expected input[1, 1, 77, 320] to have 4 channels, but got 1 channels instead

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 262, in _forward
    h = self.in_layers(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 219, in forward
    return super().forward(x.float()).type(x.dtype)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\normalization.py", line 273, in forward
    return F.group_norm(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\functional.py", line 2563, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
RuntimeError: mixed dtype (CPU): expect parameter to have scalar type of Float

---End of Error---
Timestamp: 2023-05-25 14:20:03
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 112, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, dummy_input, "unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
TypeError: LatentDiffusion.forward() missing 1 required positional argument: 'c'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 113, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 98, in extract_into_tensor
    out = a.gather(-1, t)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 111, in load_model
    x = torch.randn(1, 4, 64, 64).dtype(torch.float16).to("cuda")
TypeError: 'torch.dtype' object is not callable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=({"x":x}, {"c":c}), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 845, in forward
    t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()
AttributeError: 'dict' object has no attribute 'shape'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in p_losses
    noise = default(noise, lambda: torch.randn_like(x_start))
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\util.py", line 54, in default
    return d() if isfunction(d) else d
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 891, in <lambda>
    noise = default(noise, lambda: torch.randn_like(x_start))
RuntimeError: "normal_kernel_cuda" not implemented for 'Long'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 770, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 114, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (struct c10::Half) and bias type (float) should be the same

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 774, in forward
    emb = self.time_embed(t_emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 must have the same dtype

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(c, x), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 86, in forward
    x = layer(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Given groups=1, weight of size [320, 4, 3, 3], expected input[1, 1, 77, 320] to have 4 channels, but got 1 channels instead

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 262, in _forward
    h = self.in_layers(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 219, in forward
    return super().forward(x.float()).type(x.dtype)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\normalization.py", line 273, in forward
    return F.group_norm(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\functional.py", line 2563, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
RuntimeError: mixed dtype (CPU): expect parameter to have scalar type of Float

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 122, in load_model
    torch.onnx.export(gs.models["sd"].model, args=(x, c), f="unet.onnx", verbose=True)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 129, in forward
    output_tensors = ctx.run_function(*ctx.input_tensors)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 262, in _forward
    h = self.in_layers(x)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 219, in forward
    return super().forward(x.float()).type(x.dtype)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\normalization.py", line 273, in forward
    return F.group_norm(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\functional.py", line 2563, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
RuntimeError: mixed dtype (CPU): expect parameter to have scalar type of Float

---End of Error---
Timestamp: 2023-05-25 14:25:16
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Timestamp: 2023-05-25 14:25:41
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Timestamp: 2023-05-25 14:26:46
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Timestamp: 2023-05-25 14:27:19
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Timestamp: 2023-05-25 14:28:04
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Timestamp: 2023-05-25 14:28:48
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Timestamp: 2023-05-25 14:29:27
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (768) must match the size of tensor b (64) at non-singleton dimension 3

---End of Error---
Timestamp: 2023-05-25 14:30:17
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (768) must match the size of tensor b (64) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Timestamp: 2023-05-25 14:31:28
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (768) must match the size of tensor b (64) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Timestamp: 2023-05-25 14:32:22
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (768) must match the size of tensor b (64) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Timestamp: 2023-05-25 14:32:34
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 783, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (768) must match the size of tensor b (64) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 893, in p_losses
    model_output = self.apply_model(x_noisy, t, cond)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 71, in <lambda>
    setattr(resolved_obj, func_path[-1], lambda *args, **kwargs: self(*args, **kwargs))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\sd_optimizations\sd_hijack_unet.py", line 82, in __call__
    return self.__orig_func(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 865, in apply_model
    x_recon = self.model(x_noisy, t, **cond)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1343, in forward
    out = self.diffusion_model(x, t, context=cc, control=control)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 782, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 114, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 124, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 853, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 892, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 361, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Timestamp: 2023-05-25 14:40:11
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 117, in load_model
    gs.models["sd"].model.device = "cuda"
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1690, in __setattr__
    super().__setattr__(name, value)
AttributeError: can't set attribute 'device'

---End of Error---
Timestamp: 2023-05-25 14:41:05
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 117, in load_model
    gs.models["sd"].model.device = "cuda"
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1690, in __setattr__
    super().__setattr__(name, value)
AttributeError: can't set attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 123, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Timestamp: 2023-05-25 14:46:49
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 117, in load_model
    gs.models["sd"].model.device = "cuda"
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1690, in __setattr__
    super().__setattr__(name, value)
AttributeError: can't set attribute 'device'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 123, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 930, in UNetModel_forward
    if ctx is None:
NameError: name 'ctx' is not defined

---End of Error---
Timestamp: 2023-05-25 15:23:19
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Timestamp: 2023-05-25 15:25:08
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Timestamp: 2023-05-25 15:32:29
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Timestamp: 2023-05-25 15:34:58
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Timestamp: 2023-05-25 15:36:30
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Timestamp: 2023-05-25 15:39:11
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Timestamp: 2023-05-25 15:40:35
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model["diffusion_model"],  # model being run
TypeError: 'LatentDiffusion' object is not subscriptable

---End of Error---
Timestamp: 2023-05-25 15:41:58
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model["diffusion_model"],  # model being run
TypeError: 'LatentDiffusion' object is not subscriptable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Timestamp: 2023-05-25 15:44:21
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model["diffusion_model"],  # model being run
TypeError: 'LatentDiffusion' object is not subscriptable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Timestamp: 2023-05-25 15:45:50
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model["diffusion_model"],  # model being run
TypeError: 'LatentDiffusion' object is not subscriptable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Timestamp: 2023-05-25 15:48:11
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model["diffusion_model"],  # model being run
TypeError: 'LatentDiffusion' object is not subscriptable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 142, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 86, in load_model_from_config
    sd = pl_sd["state_dict"]
KeyError: 'state_dict'

---End of Error---
Timestamp: 2023-05-25 15:49:22
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model["diffusion_model"],  # model being run
TypeError: 'LatentDiffusion' object is not subscriptable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 142, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 86, in load_model_from_config
    sd = pl_sd["state_dict"]
KeyError: 'state_dict'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Timestamp: 2023-05-25 15:50:48
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model["diffusion_model"],  # model being run
TypeError: 'LatentDiffusion' object is not subscriptable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 142, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 86, in load_model_from_config
    sd = pl_sd["state_dict"]
KeyError: 'state_dict'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Timestamp: 2023-05-25 15:56:41
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model["diffusion_model"],  # model being run
TypeError: 'LatentDiffusion' object is not subscriptable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 142, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 86, in load_model_from_config
    sd = pl_sd["state_dict"]
KeyError: 'state_dict'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Timestamp: 2023-05-25 15:58:52
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model["diffusion_model"],  # model being run
TypeError: 'LatentDiffusion' object is not subscriptable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 142, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 86, in load_model_from_config
    sd = pl_sd["state_dict"]
KeyError: 'state_dict'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Timestamp: 2023-05-25 15:59:19
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 949, in UNetModel_forward
    ctx = device.make_context()
AttributeError: 'str' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 950, in UNetModel_forward
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 955, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(gs.models["sd"].model["diffusion_model"],  # model being run
TypeError: 'LatentDiffusion' object is not subscriptable

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 125, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 137, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 78, in load_model_from_config
    pl_sd = torch.load(ckpt, map_location="cpu")
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 886, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\serialization.py", line 1104, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'O'.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 142, in load_model
    model = self.load_model_from_config(config=config, ckpt=ckpt_path)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 86, in load_model_from_config
    sd = pl_sd["state_dict"]
KeyError: 'state_dict'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (64) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1630, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'LatentDiffusion' object has no attribute 'diffusion_model'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 155, in load_model
    torch.onnx.export(model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 846, in forward
    return self.p_losses(x, c, t, *args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 885, in p_losses
    x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 356, in q_sample
    return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +
RuntimeError: The size of tensor a (16) must match the size of tensor b (768) at non-singleton dimension 3

---End of Error---
Timestamp: 2023-05-25 16:03:28
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 158, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Timestamp: 2023-05-25 16:03:56
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 158, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Timestamp: 2023-05-25 16:05:31
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 158, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 128, in load_model
    clip = CLIP(config=clip_config, embedding_directory="models/embeddings")
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 538, in __init__
    self.cond_stage_model = clip(**(params))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 850, in __init__
    super().__init__(device=device, freeze=freeze, textmodel_json_config=textmodel_json_config)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 611, in __init__
    config = CLIPTextConfig.from_json_file(textmodel_json_config)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\transformers\configuration_utils.py", line 724, in from_json_file
    config_dict = cls._dict_from_json_file(json_file)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\transformers\configuration_utils.py", line 729, in _dict_from_json_file
    with open(json_file, "r", encoding="utf-8") as reader:
FileNotFoundError: [Errno 2] No such file or directory: 'models/configs/sd2_clip_config.json'

---End of Error---
Timestamp: 2023-05-25 16:07:16
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 158, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 128, in load_model
    clip = CLIP(config=clip_config, embedding_directory="models/embeddings")
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 538, in __init__
    self.cond_stage_model = clip(**(params))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 850, in __init__
    super().__init__(device=device, freeze=freeze, textmodel_json_config=textmodel_json_config)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 611, in __init__
    config = CLIPTextConfig.from_json_file(textmodel_json_config)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\transformers\configuration_utils.py", line 724, in from_json_file
    config_dict = cls._dict_from_json_file(json_file)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\transformers\configuration_utils.py", line 729, in _dict_from_json_file
    with open(json_file, "r", encoding="utf-8") as reader:
FileNotFoundError: [Errno 2] No such file or directory: 'models/configs/sd2_clip_config.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
NameError: name 'load_state_dict_to' is not defined

---End of Error---
Timestamp: 2023-05-25 16:08:27
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 158, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 128, in load_model
    clip = CLIP(config=clip_config, embedding_directory="models/embeddings")
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 538, in __init__
    self.cond_stage_model = clip(**(params))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 850, in __init__
    super().__init__(device=device, freeze=freeze, textmodel_json_config=textmodel_json_config)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 611, in __init__
    config = CLIPTextConfig.from_json_file(textmodel_json_config)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\transformers\configuration_utils.py", line 724, in from_json_file
    config_dict = cls._dict_from_json_file(json_file)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\transformers\configuration_utils.py", line 729, in _dict_from_json_file
    with open(json_file, "r", encoding="utf-8") as reader:
FileNotFoundError: [Errno 2] No such file or directory: 'models/configs/sd2_clip_config.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
NameError: name 'load_state_dict_to' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Timestamp: 2023-05-25 16:09:03
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 158, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 128, in load_model
    clip = CLIP(config=clip_config, embedding_directory="models/embeddings")
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 538, in __init__
    self.cond_stage_model = clip(**(params))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 850, in __init__
    super().__init__(device=device, freeze=freeze, textmodel_json_config=textmodel_json_config)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 611, in __init__
    config = CLIPTextConfig.from_json_file(textmodel_json_config)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\transformers\configuration_utils.py", line 724, in from_json_file
    config_dict = cls._dict_from_json_file(json_file)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\transformers\configuration_utils.py", line 729, in _dict_from_json_file
    with open(json_file, "r", encoding="utf-8") as reader:
FileNotFoundError: [Errno 2] No such file or directory: 'models/configs/sd2_clip_config.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
NameError: name 'load_state_dict_to' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Timestamp: 2023-05-25 16:10:28
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 158, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 128, in load_model
    clip = CLIP(config=clip_config, embedding_directory="models/embeddings")
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 538, in __init__
    self.cond_stage_model = clip(**(params))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 850, in __init__
    super().__init__(device=device, freeze=freeze, textmodel_json_config=textmodel_json_config)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 611, in __init__
    config = CLIPTextConfig.from_json_file(textmodel_json_config)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\transformers\configuration_utils.py", line 724, in from_json_file
    config_dict = cls._dict_from_json_file(json_file)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\transformers\configuration_utils.py", line 729, in _dict_from_json_file
    with open(json_file, "r", encoding="utf-8") as reader:
FileNotFoundError: [Errno 2] No such file or directory: 'models/configs/sd2_clip_config.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
NameError: name 'load_state_dict_to' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 990, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Timestamp: 2023-05-25 16:12:09
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 158, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 128, in load_model
    clip = CLIP(config=clip_config, embedding_directory="models/embeddings")
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 538, in __init__
    self.cond_stage_model = clip(**(params))
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 850, in __init__
    super().__init__(device=device, freeze=freeze, textmodel_json_config=textmodel_json_config)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 611, in __init__
    config = CLIPTextConfig.from_json_file(textmodel_json_config)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\transformers\configuration_utils.py", line 724, in from_json_file
    config_dict = cls._dict_from_json_file(json_file)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\transformers\configuration_utils.py", line 729, in _dict_from_json_file
    with open(json_file, "r", encoding="utf-8") as reader:
FileNotFoundError: [Errno 2] No such file or directory: 'models/configs/sd2_clip_config.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
NameError: name 'load_state_dict_to' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 161, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 990, in UNetModel_forward
    for binding in engine:
NameError: name 'engine' is not defined

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Timestamp: 2023-05-25 16:44:35
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 92, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 172, in optimize
    with open(script_dir / f"config_{submodel_name}.json", "r") as fin:
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\config_text_encoder.json'

---End of Error---
Timestamp: 2023-05-25 16:50:45
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 92, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 172, in optimize
    with open(script_dir / f"config_{submodel_name}.json", "r") as fin:
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\config_text_encoder.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 175, in optimize
    with open("models/configs/olive" / f"config_{submodel_name}.json", "r") as fin:
TypeError: unsupported operand type(s) for /: 'str' and 'str'

---End of Error---
Timestamp: 2023-05-25 16:51:39
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 92, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 172, in optimize
    with open(script_dir / f"config_{submodel_name}.json", "r") as fin:
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\config_text_encoder.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 175, in optimize
    with open("models/configs/olive" / f"config_{submodel_name}.json", "r") as fin:
TypeError: unsupported operand type(s) for /: 'str' and 'str'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\footprints\\text_encoder_gpu-dml_footprints.json'

---End of Error---
Timestamp: 2023-05-25 16:53:39
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 92, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 172, in optimize
    with open(script_dir / f"config_{submodel_name}.json", "r") as fin:
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\config_text_encoder.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 175, in optimize
    with open("models/configs/olive" / f"config_{submodel_name}.json", "r") as fin:
TypeError: unsupported operand type(s) for /: 'str' and 'str'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\footprints\\text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
AttributeError: 'str' object has no attribute 'open'

---End of Error---
Timestamp: 2023-05-25 16:54:47
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 92, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 172, in optimize
    with open(script_dir / f"config_{submodel_name}.json", "r") as fin:
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\config_text_encoder.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 175, in optimize
    with open("models/configs/olive" / f"config_{submodel_name}.json", "r") as fin:
TypeError: unsupported operand type(s) for /: 'str' and 'str'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\footprints\\text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
AttributeError: 'str' object has no attribute 'open'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\diffusers_onnx_node.py\\footprints\\text_encoder_gpu-dml_footprints.json'

---End of Error---
Timestamp: 2023-05-25 16:55:45
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 92, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 172, in optimize
    with open(script_dir / f"config_{submodel_name}.json", "r") as fin:
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\config_text_encoder.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 175, in optimize
    with open("models/configs/olive" / f"config_{submodel_name}.json", "r") as fin:
TypeError: unsupported operand type(s) for /: 'str' and 'str'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\footprints\\text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
AttributeError: 'str' object has no attribute 'open'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\diffusers_onnx_node.py\\footprints\\text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'text_encoder_gpu-dml_footprints.json'

---End of Error---
Timestamp: 2023-05-25 16:56:15
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 92, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 172, in optimize
    with open(script_dir / f"config_{submodel_name}.json", "r") as fin:
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\config_text_encoder.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 175, in optimize
    with open("models/configs/olive" / f"config_{submodel_name}.json", "r") as fin:
TypeError: unsupported operand type(s) for /: 'str' and 'str'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\footprints\\text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
AttributeError: 'str' object has no attribute 'open'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\diffusers_onnx_node.py\\footprints\\text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 202, in optimize
    assert conversion_footprint and optimizer_footprint
AssertionError

---End of Error---
Timestamp: 2023-05-25 16:58:22
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 92, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 172, in optimize
    with open(script_dir / f"config_{submodel_name}.json", "r") as fin:
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\config_text_encoder.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 175, in optimize
    with open("models/configs/olive" / f"config_{submodel_name}.json", "r") as fin:
TypeError: unsupported operand type(s) for /: 'str' and 'str'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\footprints\\text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
AttributeError: 'str' object has no attribute 'open'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\diffusers_onnx_node.py\\footprints\\text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 202, in optimize
    assert conversion_footprint and optimizer_footprint
AssertionError

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", Path("unopt"), Path("opt") )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 202, in optimize
    assert conversion_footprint and optimizer_footprint
AssertionError

---End of Error---
Timestamp: 2023-05-25 16:59:58
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 92, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 172, in optimize
    with open(script_dir / f"config_{submodel_name}.json", "r") as fin:
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\config_text_encoder.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 175, in optimize
    with open("models/configs/olive" / f"config_{submodel_name}.json", "r") as fin:
TypeError: unsupported operand type(s) for /: 'str' and 'str'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\footprints\\text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
AttributeError: 'str' object has no attribute 'open'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\mix\\ainodes\\ainodes-engine\\custom_nodes\\ainodes_engine_base_nodes\\torch_nodes\\diffusers_onnx_node.py\\footprints\\text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 191, in optimize
    with footprints_file_path.open("r") as footprint_file:
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1119, in open
    return self._accessor.open(self, mode, buffering, encoding, errors,
FileNotFoundError: [Errno 2] No such file or directory: 'text_encoder_gpu-dml_footprints.json'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", "unopt", "opt" )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 202, in optimize
    assert conversion_footprint and optimizer_footprint
AssertionError

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", Path("unopt"), Path("opt") )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 202, in optimize
    assert conversion_footprint and optimizer_footprint
AssertionError

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 93, in evalImplementation_thread
    done = optimize("runwayml/stable-diffusion-v1-5", Path("unopt"), Path("opt") )
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\diffusers_onnx_node.py", line 204, in optimize
    unoptimized_olive_model = ONNXModel(**conversion_footprint["model_config"]["config"])
KeyError: 'config'

---End of Error---
Timestamp: 2023-05-25 17:33:24
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 893, in load_model_weights
    m, u = model.load_state_dict(sd, strict=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).

---End of Error---
Timestamp: 2023-05-25 17:34:42
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 893, in load_model_weights
    m, u = model.load_state_dict(sd, strict=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Timestamp: 2023-05-25 17:35:01
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 893, in load_model_weights
    m, u = model.load_state_dict(sd, strict=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Timestamp: 2023-05-25 17:38:26
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 893, in load_model_weights
    m, u = model.load_state_dict(sd, strict=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1031, in build
    ctx = device.make_context()
AttributeError: 'device' object has no attribute 'make_context'

---End of Error---
Timestamp: 2023-05-25 17:41:39
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 893, in load_model_weights
    m, u = model.load_state_dict(sd, strict=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1031, in build
    ctx = device.make_context()
AttributeError: 'device' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Timestamp: 2023-05-25 17:43:55
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 893, in load_model_weights
    m, u = model.load_state_dict(sd, strict=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1031, in build
    ctx = device.make_context()
AttributeError: 'device' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Timestamp: 2023-05-25 17:44:55
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 893, in load_model_weights
    m, u = model.load_state_dict(sd, strict=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1031, in build
    ctx = device.make_context()
AttributeError: 'device' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1326, in forward
    cc = torch.cat(c_crossattn, 1)
TypeError: cat() received an invalid combination of arguments - got (NoneType, int), but expected one of:
 * (tuple of Tensors tensors, int dim, *, Tensor out)
 * (tuple of Tensors tensors, name dim, *, Tensor out)


---End of Error---
Timestamp: 2023-05-25 17:47:15
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 893, in load_model_weights
    m, u = model.load_state_dict(sd, strict=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1031, in build
    ctx = device.make_context()
AttributeError: 'device' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1326, in forward
    cc = torch.cat(c_crossattn, 1)
TypeError: cat() received an invalid combination of arguments - got (NoneType, int), but expected one of:
 * (tuple of Tensors tensors, int dim, *, Tensor out)
 * (tuple of Tensors tensors, name dim, *, Tensor out)


---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 138, in load_model
    model.load_state_dict(load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2009, in load_state_dict
    raise TypeError("Expected state_dict to be dict-like, got {}.".format(type(state_dict)))
TypeError: Expected state_dict to be dict-like, got <class 'list'>.

---End of Error---
Timestamp: 2023-05-25 17:47:41
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 893, in load_model_weights
    m, u = model.load_state_dict(sd, strict=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1031, in build
    ctx = device.make_context()
AttributeError: 'device' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1326, in forward
    cc = torch.cat(c_crossattn, 1)
TypeError: cat() received an invalid combination of arguments - got (NoneType, int), but expected one of:
 * (tuple of Tensors tensors, int dim, *, Tensor out)
 * (tuple of Tensors tensors, name dim, *, Tensor out)


---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 138, in load_model
    model.load_state_dict(load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2009, in load_state_dict
    raise TypeError("Expected state_dict to be dict-like, got {}.".format(type(state_dict)))
TypeError: Expected state_dict to be dict-like, got <class 'list'>.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 138, in load_model
    model.load_state_dict(sd)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	Missing key(s) in state_dict: "betas", "alphas_cumprod", "alphas_cumprod_prev", "sqrt_alphas_cumprod", "sqrt_one_minus_alphas_cumprod", "log_one_minus_alphas_cumprod", "sqrt_recip_alphas_cumprod", "sqrt_recipm1_alphas_cumprod", "posterior_variance", "posterior_log_variance_clipped", "posterior_mean_coef1", "posterior_mean_coef2". 

---End of Error---
Timestamp: 2023-05-25 17:49:00
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 893, in load_model_weights
    m, u = model.load_state_dict(sd, strict=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1031, in build
    ctx = device.make_context()
AttributeError: 'device' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1326, in forward
    cc = torch.cat(c_crossattn, 1)
TypeError: cat() received an invalid combination of arguments - got (NoneType, int), but expected one of:
 * (tuple of Tensors tensors, int dim, *, Tensor out)
 * (tuple of Tensors tensors, name dim, *, Tensor out)


---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 138, in load_model
    model.load_state_dict(load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2009, in load_state_dict
    raise TypeError("Expected state_dict to be dict-like, got {}.".format(type(state_dict)))
TypeError: Expected state_dict to be dict-like, got <class 'list'>.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 138, in load_model
    model.load_state_dict(sd)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	Missing key(s) in state_dict: "betas", "alphas_cumprod", "alphas_cumprod_prev", "sqrt_alphas_cumprod", "sqrt_one_minus_alphas_cumprod", "log_one_minus_alphas_cumprod", "sqrt_recip_alphas_cumprod", "sqrt_recipm1_alphas_cumprod", "posterior_variance", "posterior_log_variance_clipped", "posterior_mean_coef1", "posterior_mean_coef2". 

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 163, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Timestamp: 2023-05-25 17:49:34
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 135, in load_model
    model = load_model_weights(model, sd, verbose=False, load_state_dict_to=load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 893, in load_model_weights
    m, u = model.load_state_dict(sd, strict=False)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.1.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.input_blocks.2.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.input_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.input_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.middle_block.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.3.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.4.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_in.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([1280, 768]) from checkpoint, the shape in current model is torch.Size([1280, 1024]).
	size mismatch for model.diffusion_model.output_blocks.5.1.proj_out.weight: copying a param with shape torch.Size([1280, 1280, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.6.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.7.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_in.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([640, 768]) from checkpoint, the shape in current model is torch.Size([640, 1024]).
	size mismatch for model.diffusion_model.output_blocks.8.1.proj_out.weight: copying a param with shape torch.Size([640, 640, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.9.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.10.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_in.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight: copying a param with shape torch.Size([320, 768]) from checkpoint, the shape in current model is torch.Size([320, 1024]).
	size mismatch for model.diffusion_model.output_blocks.11.1.proj_out.weight: copying a param with shape torch.Size([320, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320]).

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1030, in build
    device = cuda.Device(0)  # enter your Gpu id here
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 957, in __call__
    result = self.__origin__(*args, **kwargs)
  File "C:\Users\mix\AppData\Local\Programs\Python\Python310\lib\typing.py", line 387, in __call__
    raise TypeError(f"Cannot instantiate {self!r}")
TypeError: Cannot instantiate typing.Union

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 983, in UNetModel_forward
    engine, ctx, trt_context = build()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 1031, in build
    ctx = device.make_context()
AttributeError: 'device' object has no attribute 'make_context'

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 160, in load_model
    torch.onnx.export(model.model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1326, in forward
    cc = torch.cat(c_crossattn, 1)
TypeError: cat() received an invalid combination of arguments - got (NoneType, int), but expected one of:
 * (tuple of Tensors tensors, int dim, *, Tensor out)
 * (tuple of Tensors tensors, name dim, *, Tensor out)


---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 138, in load_model
    model.load_state_dict(load_state_dict_to)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2009, in load_state_dict
    raise TypeError("Expected state_dict to be dict-like, got {}.".format(type(state_dict)))
TypeError: Expected state_dict to be dict-like, got <class 'list'>.

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 138, in load_model
    model.load_state_dict(sd)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 2056, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for LatentDiffusion:
	Missing key(s) in state_dict: "betas", "alphas_cumprod", "alphas_cumprod_prev", "sqrt_alphas_cumprod", "sqrt_one_minus_alphas_cumprod", "log_one_minus_alphas_cumprod", "sqrt_recip_alphas_cumprod", "sqrt_recipm1_alphas_cumprod", "posterior_variance", "posterior_log_variance_clipped", "posterior_mean_coef1", "posterior_mean_coef2". 

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 163, in load_model
    torch.onnx.export(model.model.diffusion_model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 797, in forward
    h = module(h, emb, context)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 82, in forward
    x = layer(x, emb)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\openaimodel.py", line 249, in forward
    return checkpoint(
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\modules\diffusionmodules\util.py", line 121, in checkpoint
    return CheckpointFunction.apply(func, len(inputs), *args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\autograd\function.py", line 506, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
RuntimeError: invalid unordered_map<K, T> key

---End of Error---
Traceback (most recent call last):
  File "C:\Users\mix\ainodes\ainodes-engine\ainodes_frontend\base\ai_node_base.py", line 286, in evalImplementationThreadHandler
    result = self.evalImplementation_thread()
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\torch_nodes\torch_loader_node.py", line 115, in evalImplementation_thread
    self.loader.load_model(model_name, config_name, inpaint)
  File "C:\Users\mix\ainodes\ainodes-engine\custom_nodes\ainodes_engine_base_nodes\ainodes_backend\model_loader.py", line 163, in load_model
    torch.onnx.export(model.model,  # model being run
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 507, in export
    _export(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1567, in _export
    graph, params_dict, torch_out = _model_to_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1124, in _model_to_graph
    graph, params, torch_out, module = _create_jit_graph(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 1000, in _create_jit_graph
    graph, torch_out = _trace_and_get_graph_from_model(model, args)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\onnx\utils.py", line 904, in _trace_and_get_graph_from_model
    trace_graph, torch_out, inputs_states = torch.jit._get_trace_graph(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 1268, in _get_trace_graph
    outs = ONNXTracedModule(f, strict, _force_outplace, return_inputs, _return_inputs_states)(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 127, in forward
    graph, out = torch._C._create_graph_by_tracing(
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\jit\_trace.py", line 118, in wrapper
    outs.append(self.inner(*trace_inputs))
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1502, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\nodes_env\lib\site-packages\torch\nn\modules\module.py", line 1492, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "C:\Users\mix\ainodes\ainodes-engine\ldm\models\diffusion\ddpm.py", line 1326, in forward
    cc = torch.cat(c_crossattn, 1)
TypeError: cat() received an invalid combination of arguments - got (NoneType, int), but expected one of:
 * (tuple of Tensors tensors, int dim, *, Tensor out)
 * (tuple of Tensors tensors, name dim, *, Tensor out)


---End of Error---
